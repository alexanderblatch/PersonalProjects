package DHDB_Package;
import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPasswordField;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import java.awt.GridBagLayout;
import javax.swing.JButton;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.SwingConstants;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
/**
 *
 * @author blatcha (alex.blatch@nomura.com)
 */
public class DogHouseDatabase {
    	private JFrame frmWelcome;
	private JFrame frmLogin;
	public JFrame frmMain;
	public JFrame frmReport;
	private JTextField userField;
	private JPasswordField passField;
	public JTextField incFilterField;
	public JTextField excFilterField;
	public boolean validUser = false;
	//Need to develop a better system for storing userdetails. I want to be able to edit the details in one instance, 
	//close it, and retain the changes in a new instance.
	String [] userDetails = {"Bruce Lee", "BeWater", "John Doe", "Se7en", "Nu Wa", "Claymen", "Nox", "Nighty-night"};
	
	public static void main(String[] args) {
		EventQueue.invokeLater(() -> {
                    try {
                        DogHouseDatabase window = new DogHouseDatabase();
                        window.frmWelcome.setLocationRelativeTo(null);
                        window.frmWelcome.setVisible(true);
                    } catch (Exception e) {
                    }
                });
	}
	public DogHouseDatabase() {
		initializeWelcomeFrame();
	}
	private void initializeWelcomeFrame() {
		frmWelcome = new JFrame();
		frmWelcome.setResizable(false);
		frmWelcome.setTitle("Dog House Database");
		frmWelcome.setBounds(100, 100, 800, 600);
		frmWelcome.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{325, 150, 325, 0};
		gridBagLayout.rowHeights = new int[]{179, 248, 79, 0};
		gridBagLayout.columnWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		frmWelcome.getContentPane().setLayout(gridBagLayout);
		
		JLabel lblBarkingmadDog = new JLabel("<html><body><font size = 7>.: Barking-Mad Dog Kennels :.</font></body></html> \n Welcome!");
		lblBarkingmadDog.setVerticalAlignment(SwingConstants.CENTER);
		lblBarkingmadDog.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_lblBarkingmadDog = new GridBagConstraints();
		gbc_lblBarkingmadDog.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblBarkingmadDog.gridwidth = 3;
		gbc_lblBarkingmadDog.insets = new Insets(0, 0, 5, 0);
		gbc_lblBarkingmadDog.gridx = 0;
		gbc_lblBarkingmadDog.gridy = 0;
		frmWelcome.getContentPane().add(lblBarkingmadDog, gbc_lblBarkingmadDog);
		
		JLabel lblWelcome = new JLabel("<html><body><font size = 4>Welcome!</font></body></html>");
		lblWelcome.setVerticalAlignment(SwingConstants.TOP);
		GridBagConstraints gbc_lblWelcome = new GridBagConstraints();
		gbc_lblWelcome.anchor = GridBagConstraints.NORTH;
		gbc_lblWelcome.insets = new Insets(0, 0, 5, 5);
		gbc_lblWelcome.gridx = 1;
		gbc_lblWelcome.gridy = 1;
		frmWelcome.getContentPane().add(lblWelcome, gbc_lblWelcome);
		
		JButton btnEnter = new JButton("Enter");
		btnEnter.addActionListener((ActionEvent e) -> {
                    try {
                        initializeLoginFrame();
                        Thread.sleep(200);
                        frmWelcome.dispose();
                    } catch (InterruptedException e1) {
                    }
                });
		GridBagConstraints gbc_btnEnter = new GridBagConstraints();
		gbc_btnEnter.fill = GridBagConstraints.BOTH;
		gbc_btnEnter.insets = new Insets(0, 0, 0, 5);
		gbc_btnEnter.gridx = 1;
		gbc_btnEnter.gridy = 2;
		frmWelcome.getContentPane().add(btnEnter, gbc_btnEnter);
	}
	private void initializeLoginFrame() {
		frmLogin = new JFrame();
		frmLogin.setResizable(false);
		frmLogin.setBounds(100, 100, 800, 600);
		frmLogin.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{351, 134, 348, 0};
		gridBagLayout.rowHeights = new int[]{179, 123, 0, 0, 91, 0};
		gridBagLayout.columnWeights = new double[]{0.0, 1.0, 0.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		frmLogin.getContentPane().setLayout(gridBagLayout);
		frmLogin.setLocationRelativeTo(frmWelcome);
		frmLogin.setVisible(true);
		
		JLabel lblBarkingmadDog = new JLabel("<html><body><font size = 7>.: Log-In Page :.</font></body></html>");
		lblBarkingmadDog.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_lblBarkingmadDog = new GridBagConstraints();
		gbc_lblBarkingmadDog.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblBarkingmadDog.gridwidth = 3;
		gbc_lblBarkingmadDog.insets = new Insets(0, 0, 5, 0);
		gbc_lblBarkingmadDog.gridx = 0;
		gbc_lblBarkingmadDog.gridy = 0;
		frmLogin.getContentPane().add(lblBarkingmadDog, gbc_lblBarkingmadDog);
		
		JLabel lblUsername = new JLabel("Username:");
		GridBagConstraints gbc_lblUsername = new GridBagConstraints();
		gbc_lblUsername.anchor = GridBagConstraints.EAST;
		gbc_lblUsername.insets = new Insets(0, 0, 5, 5);
		gbc_lblUsername.gridx = 0;
		gbc_lblUsername.gridy = 2;
		frmLogin.getContentPane().add(lblUsername, gbc_lblUsername);
		
		userField = new JTextField();
		GridBagConstraints gbc_textField = new GridBagConstraints();
		gbc_textField.insets = new Insets(0, 0, 5, 5);
		gbc_textField.fill = GridBagConstraints.HORIZONTAL;
		gbc_textField.gridx = 1;
		gbc_textField.gridy = 2;
		frmLogin.getContentPane().add(userField, gbc_textField);
		userField.setColumns(10);
		
		JLabel lblPassword = new JLabel("Password:");
		GridBagConstraints gbc_lblPassword = new GridBagConstraints();
		gbc_lblPassword.anchor = GridBagConstraints.EAST;
		gbc_lblPassword.insets = new Insets(0, 0, 5, 5);
		gbc_lblPassword.gridx = 0;
		gbc_lblPassword.gridy = 3;
		frmLogin.getContentPane().add(lblPassword, gbc_lblPassword);
		
		passField = new JPasswordField();
		passField.setEchoChar('*');
		GridBagConstraints gbc_textField_1 = new GridBagConstraints();
		gbc_textField_1.insets = new Insets(0, 0, 5, 5);
		gbc_textField_1.fill = GridBagConstraints.HORIZONTAL;
		gbc_textField_1.gridx = 1;
		gbc_textField_1.gridy = 3;
		frmLogin.getContentPane().add(passField, gbc_textField_1);
		passField.setColumns(10);
	
		JButton btnLogIn = new JButton("Log in");
		GridBagConstraints gbc_btnLogIn = new GridBagConstraints();
		gbc_btnLogIn.gridwidth = 3;
		gbc_btnLogIn.gridx = 0;
		gbc_btnLogIn.gridy = 4;
		frmLogin.getContentPane().add(btnLogIn, gbc_btnLogIn);
		btnLogIn.addActionListener((ActionEvent e) -> {
                    for (int i = 0; i < userDetails.length; i = i + 2) {
                        if (userField.getText().equals(userDetails[i]) && true && passField.getText().equals(userDetails[i + 1]) == true) {
                            validUser = true;
                        }
                    }
                    if (validUser == true) {
                        initializeMainFrame();
                        try {
                            Thread.sleep(200);
                            frmLogin.dispose();
                        } catch (InterruptedException e1) {
                        }
                    } else {
                        JFrame popup;
                        popup = new JFrame();
                        popup.setResizable(false);
                        popup.setBounds(100, 100, 150, 120);
                        popup.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        JLabel errorlbl = new JLabel("Invalid login details!", SwingConstants.CENTER);
                        popup.getContentPane().add(errorlbl);
                        popup.setLocationRelativeTo(frmLogin);
                        popup.setVisible(true);
                    }
                });
	}
	public void initializeMainFrame() {
		frmMain = new JFrame();
		frmMain.setResizable(false);
		frmMain.setBounds(100, 100, 800, 600);
		frmMain.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{49, 36, 517, 36, 0};
		gridBagLayout.rowHeights = new int[]{0, 24, 11, 37, 32, 0, 37, 0, 0, 184, 232, 12, 0};
		gridBagLayout.columnWeights = new double[]{0.0, 0.0, 1.0, 0.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
		frmMain.getContentPane().setLayout(gridBagLayout);
		frmMain.setLocationRelativeTo(frmLogin);
		frmMain.setVisible(true);
		
		JLabel lblNewLabel = new JLabel("<html><body><font size = 7>.: Database Access: Search & Edit :.</font></body></html>");
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_lblNewLabel = new GridBagConstraints();
		gbc_lblNewLabel.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblNewLabel.gridwidth = 4;
		gbc_lblNewLabel.insets = new Insets(0, 0, 5, 0);
		gbc_lblNewLabel.gridx = 0;
		gbc_lblNewLabel.gridy = 0;
		frmMain.getContentPane().add(lblNewLabel, gbc_lblNewLabel);
		
		JLabel lblSearchResults = new JLabel("Database Contents:");
		GridBagConstraints gbc_lblSearchResults = new GridBagConstraints();
		gbc_lblSearchResults.insets = new Insets(0, 0, 5, 5);
		gbc_lblSearchResults.gridx = 2;
		gbc_lblSearchResults.gridy = 2;
		frmMain.getContentPane().add(lblSearchResults, gbc_lblSearchResults);
		
		JLabel lblSearchFilter = new JLabel("Include filter:");
		GridBagConstraints gbc_lblSearchFilter = new GridBagConstraints();
		gbc_lblSearchFilter.insets = new Insets(0, 0, 5, 5);
		gbc_lblSearchFilter.gridx = 1;
		gbc_lblSearchFilter.gridy = 3;
		frmMain.getContentPane().add(lblSearchFilter, gbc_lblSearchFilter);
		
		//Populate below list with names found in 'Dog' table + Dog ID - Requires Database Connection + Query
		DefaultListModel model = new DefaultListModel();
                JList list = new JList(model);
		GridBagConstraints gbc_list = new GridBagConstraints();
		gbc_list.gridheight = 8;
		gbc_list.insets = new Insets(0, 0, 5, 5);
		gbc_list.fill = GridBagConstraints.BOTH;
		gbc_list.gridx = 2;
		gbc_list.gridy = 3;
		frmMain.getContentPane().add(list, gbc_list);
		
		//Adds qualifying condition to search function
		incFilterField = new JTextField();
		GridBagConstraints gbc_textField = new GridBagConstraints();
		gbc_textField.anchor = GridBagConstraints.NORTH;
		gbc_textField.insets = new Insets(0, 0, 5, 5);
		gbc_textField.fill = GridBagConstraints.HORIZONTAL;
		gbc_textField.gridx = 1;
		gbc_textField.gridy = 4;
		frmMain.getContentPane().add(incFilterField, gbc_textField);
		incFilterField.setColumns(10);
		
		//Adds qualifying condition to search function
		JLabel lblExcludeFilter = new JLabel("Exclude filter:");
		GridBagConstraints gbc_lblExcludeFilter = new GridBagConstraints();
		gbc_lblExcludeFilter.insets = new Insets(0, 0, 5, 5);
		gbc_lblExcludeFilter.gridx = 1;
		gbc_lblExcludeFilter.gridy = 5;
		frmMain.getContentPane().add(lblExcludeFilter, gbc_lblExcludeFilter);
		
		excFilterField = new JTextField();
		GridBagConstraints gbc_textField_1 = new GridBagConstraints();
		gbc_textField_1.anchor = GridBagConstraints.NORTH;
		gbc_textField_1.insets = new Insets(0, 0, 5, 5);
		gbc_textField_1.fill = GridBagConstraints.HORIZONTAL;
		gbc_textField_1.gridx = 1;
		gbc_textField_1.gridy = 6;
		frmMain.getContentPane().add(excFilterField, gbc_textField_1);
		excFilterField.setColumns(10);
		
		//Runs query for re-population of list, subject to the qualifiers specified
		JButton btnSearch = new JButton("Search");
		GridBagConstraints gbc_btnSearch = new GridBagConstraints();
		gbc_btnSearch.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnSearch.insets = new Insets(0, 0, 5, 5);
		gbc_btnSearch.gridx = 1;
		gbc_btnSearch.gridy = 7;
		frmMain.getContentPane().add(btnSearch, gbc_btnSearch);
		
		JButton btnGenerateReport = new JButton("Generate Report");
		GridBagConstraints gbc_btnGenerateReport = new GridBagConstraints();
		gbc_btnGenerateReport.insets = new Insets(0, 0, 5, 5);
		gbc_btnGenerateReport.gridx = 1;
		gbc_btnGenerateReport.gridy = 8;
		frmMain.getContentPane().add(btnGenerateReport, gbc_btnGenerateReport);
		
		JButton btnEditSelection = new JButton("Edit Selection");
		GridBagConstraints gbc_btnEditSelection = new GridBagConstraints();
		gbc_btnEditSelection.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnEditSelection.insets = new Insets(0, 0, 5, 5);
		gbc_btnEditSelection.gridx = 1;
		gbc_btnEditSelection.gridy = 9;
		frmMain.getContentPane().add(btnEditSelection, gbc_btnEditSelection);
		
                JButton btnConnect = new JButton("Connect");
		GridBagConstraints gbc_btnConnect = new GridBagConstraints();
		gbc_btnConnect.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnConnect.insets = new Insets(0, 0, 5, 5);
		gbc_btnConnect.gridx = 1;
		gbc_btnConnect.gridy = 1;
		frmMain.getContentPane().add(btnConnect, gbc_btnConnect);
                
                btnConnect.addActionListener((ActionEvent e) -> {
                   
                    try {
                        String host = "jdbc:derby://localhost:1527/DHDB";
                        String uName = "NyxThatNox";
                        String pWord = "Nighty-night";
                        Connection conn = DriverManager.getConnection(host, uName, pWord);
                        
                        Statement stmt = conn.createStatement();
                        String Query = "Select * FROM Dog";
                        String RowQuery = "SELECT COUNT(*) As rowcount FROM Dog";
                        ResultSet rs1 = stmt.executeQuery( RowQuery );
                        rs1.next();
                        int RowNum = rs1.getInt("rowcount");
                        ResultSet rs2 = stmt.executeQuery( Query );
                        for (int i = 0; i < RowNum; i++) {
                        rs2.next();
                        model.addElement(rs2.getString("Pet_Name"));
                        }
                        JFrame popup;
                        popup = new JFrame();
                        popup.setResizable(false);
                        popup.setBounds(200, 200, 250, 220);
                        popup.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        JLabel errorlbl = new JLabel("Successfully connected to database.", SwingConstants.CENTER);
                        popup.getContentPane().add(errorlbl);
                        popup.setLocationRelativeTo(frmLogin);
                        popup.setVisible(true);
                        } catch ( SQLException err ) {
                             JFrame popup;
                        popup = new JFrame();
                        popup.setResizable(false);
                        popup.setBounds(100, 100, 150, 120);
                        popup.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        JLabel errorlbl = new JLabel("There was an error connecting to the database: " + err.getMessage(), SwingConstants.CENTER);
                        popup.getContentPane().add(errorlbl);
                        popup.setLocationRelativeTo(frmLogin);
                        popup.setVisible(true);
                            }
                });

		btnGenerateReport.addActionListener((ActionEvent e) -> {
                    int selectionIndex = list.getSelectedIndex();
                    initializeReportFrame(selectionIndex);
                });
	}
	public void initializeReportFrame(int selectionIndex) {
                String DogsName = "N/A";
                String DogsAge = "N/A";
                String Breed = "N/A";
                String OwnersName = "N/A";
                String HomeAddress = "N/A";
                String OwnersTel = "N/A";
                String VetName = "N/A";
                String VetTel = "N/A";
                try {
                String host = "jdbc:derby://localhost:1527/DHDB";
                String uName = "NyxThatNox";
                String pWord = "Nighty-night";
                Connection conn = DriverManager.getConnection(host, uName, pWord);
                Statement stmt = conn.createStatement();
                String ReportQuery = "SELECT "
                        +"Dog.Dog_ID,Dog.Pet_Name,Dog.Age,Dog.Breed,Club.Club_Name,"
                        +"Owner.Owner_FName,Owner.Owner_LName,OContact.Tel_Number "
                        +"As Owner_Tel_Number,OContact.House_Number,OContact.Street,"
                        +"OContact.City,OContact.Postcode,Vet.Vet_FName,Vet.Vet_LName,"
                        +"VContact.Tel_Number As Vet_Tel_Number"
                        +"FROM Dog Dog "
                        +"JOIN Owner Owner ON Dog.Owner_ID = Owner.Owner_ID "
                        +"JOIN Club Club ON Dog.Club_ID = Club.Club_ID "
                        +"JOIN Vet Vet ON Dog.Vet_ID = Vet.Vet_ID "
                        +"JOIN Contact OContact ON Owner.Contact_ID = OContact.Contact_ID "
                        +"JOIN Contact VContact ON Vet.Contact_ID = VContact.Contact_ID "
                        +"WHERE Dog.Dog_ID = " + (selectionIndex + 1);
                ResultSet rs = stmt.executeQuery( ReportQuery );
                rs.next();
                
                //Dog's name
                DogsName = rs.getString("Pet_Name");
                
                //Dog's age
                Integer intAge= rs.getInt("Age");
                DogsAge = intAge.toString();
                
                //Dog's breed
                Breed = rs.getString("Breed");
                
                //Owner's Name
                OwnersName = rs.getString("Owner_FName") + " " + rs.getString("Owner_LName");
                
                //Owner's/Dog's home address
                Integer HouseNumber = rs.getInt("House_Number");
                HomeAddress = HouseNumber.toString() + " " + rs.getString("Street") 
                    + " street, " + rs.getString("City") + ", " + rs.getString("Postcode");
                
                //Owner's Telephone Number
                Integer OwnerTelInt = rs.getInt("Owner_Tel_Number");
                OwnersTel = OwnerTelInt.toString();
                
                //Vet's Name
                VetName = rs.getString("Vet_FName") + " " + rs.getString("Vet_LName");
                
                //Vet's Telephone Number
                Integer VetTelInt = rs.getInt("Vet_Tel_Number");
                VetTel = VetTelInt.toString();
                
                } catch (SQLException err) {
                    System.out.println("Error fetching records... Check SQL for validity.");
                    System.out.println(err.getMessage());
                }
		frmReport = new JFrame();
		frmReport.setBounds(100, 100, 600, 450 );
		frmReport.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{131, 346, 110, 0};
		gridBagLayout.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0};
		gridBagLayout.columnWeights = new double[]{0.0, 1.0, 0.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, Double.MIN_VALUE};
		frmReport.getContentPane().setLayout(gridBagLayout);
		frmReport.setLocationRelativeTo(frmMain);
		frmReport.setVisible(true);
		
		JLabel lblReportDocument = new JLabel("<html><body><font size = 7>.: Report Document :.</font></body></html>");
		lblReportDocument.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_lblReportDocument = new GridBagConstraints();
		gbc_lblReportDocument.gridwidth = 3;
		gbc_lblReportDocument.insets = new Insets(0, 0, 5, 0);
		gbc_lblReportDocument.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblReportDocument.gridx = 0;
		gbc_lblReportDocument.gridy = 0;
		frmReport.getContentPane().add(lblReportDocument, gbc_lblReportDocument);
		
		JLabel lblDogsName = new JLabel("Dog's Name:");
		lblDogsName.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblDogsName = new GridBagConstraints();
		gbc_lblDogsName.anchor = GridBagConstraints.EAST;
		gbc_lblDogsName.insets = new Insets(0, 0, 5, 5);
		gbc_lblDogsName.gridx = 0;
		gbc_lblDogsName.gridy = 1;
		frmReport.getContentPane().add(lblDogsName, gbc_lblDogsName);
		
		JTextArea txtDogsName = new JTextArea();
		txtDogsName.setText(DogsName);
		txtDogsName.setEditable(false);
		GridBagConstraints gbc_txtDogsName = new GridBagConstraints();
		gbc_txtDogsName.insets = new Insets(0, 0, 5, 5);
		gbc_txtDogsName.fill = GridBagConstraints.BOTH;
		gbc_txtDogsName.gridx = 1;
		gbc_txtDogsName.gridy = 1;
		frmReport.getContentPane().add(txtDogsName, gbc_txtDogsName);
		
		JLabel lblDogsAge = new JLabel("Dog's Age:");
		lblDogsAge.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblDogsAge = new GridBagConstraints();
		gbc_lblDogsAge.anchor = GridBagConstraints.EAST;
		gbc_lblDogsAge.insets = new Insets(0, 0, 5, 5);
		gbc_lblDogsAge.gridx = 0;
		gbc_lblDogsAge.gridy = 2;
		frmReport.getContentPane().add(lblDogsAge, gbc_lblDogsAge);
		
		JTextArea txtDogsAge = new JTextArea();
		txtDogsAge.setText(DogsAge);
		txtDogsAge.setEditable(false);
		GridBagConstraints gbc_txtDogsAge = new GridBagConstraints();
		gbc_txtDogsAge.insets = new Insets(0, 0, 5, 5);
		gbc_txtDogsAge.fill = GridBagConstraints.BOTH;
		gbc_txtDogsAge.gridx = 1;
		gbc_txtDogsAge.gridy = 2;
		frmReport.getContentPane().add(txtDogsAge, gbc_txtDogsAge);
		
		JLabel lblBreed = new JLabel("Breed:");
		lblBreed.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblBreed = new GridBagConstraints();
		gbc_lblBreed.anchor = GridBagConstraints.EAST;
		gbc_lblBreed.insets = new Insets(0, 0, 5, 5);
		gbc_lblBreed.gridx = 0;
		gbc_lblBreed.gridy = 3;
		frmReport.getContentPane().add(lblBreed, gbc_lblBreed);
		
		JTextArea txtBreed = new JTextArea();
		txtBreed.setText(Breed);
		txtBreed.setEditable(false);
		GridBagConstraints gbc_txtBreed = new GridBagConstraints();
		gbc_txtBreed.insets = new Insets(0, 0, 5, 5);
		gbc_txtBreed.fill = GridBagConstraints.BOTH;
		gbc_txtBreed.gridx = 1;
		gbc_txtBreed.gridy = 3;
		frmReport.getContentPane().add(txtBreed, gbc_txtBreed);
                
		//Below Label does nothing...? Remove?
		JLabel label = new JLabel("");
		GridBagConstraints gbc_label = new GridBagConstraints();
		gbc_label.insets = new Insets(0, 0, 5, 5);
		gbc_label.gridx = 0;
		gbc_label.gridy = 4;
		frmReport.getContentPane().add(label, gbc_label);
		
		JLabel lblOwnersName = new JLabel("Owner's Name:");
		lblOwnersName.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblOwnersName = new GridBagConstraints();
		gbc_lblOwnersName.anchor = GridBagConstraints.EAST;
		gbc_lblOwnersName.insets = new Insets(0, 0, 5, 5);
		gbc_lblOwnersName.gridx = 0;
		gbc_lblOwnersName.gridy = 5;
		frmReport.getContentPane().add(lblOwnersName, gbc_lblOwnersName);
		
		JTextArea txtOwnerName = new JTextArea();
		txtOwnerName.setText(OwnersName);
		txtOwnerName.setEditable(false);
		GridBagConstraints gbc_txtOwnerName = new GridBagConstraints();
		gbc_txtOwnerName.insets = new Insets(0, 0, 5, 5);
		gbc_txtOwnerName.fill = GridBagConstraints.BOTH;
		gbc_txtOwnerName.gridx = 1;
		gbc_txtOwnerName.gridy = 5;
		frmReport.getContentPane().add(txtOwnerName, gbc_txtOwnerName);
		
		JLabel lblHomeAddress = new JLabel("Home Address:");
		lblHomeAddress.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblHomeAddress = new GridBagConstraints();
		gbc_lblHomeAddress.anchor = GridBagConstraints.EAST;
		gbc_lblHomeAddress.insets = new Insets(0, 0, 5, 5);
		gbc_lblHomeAddress.gridx = 0;
		gbc_lblHomeAddress.gridy = 6;
		frmReport.getContentPane().add(lblHomeAddress, gbc_lblHomeAddress);
		
		JTextArea txtHomeAddress = new JTextArea();
		txtHomeAddress.setText(HomeAddress);
		txtHomeAddress.setEditable(false);
		GridBagConstraints gbc_txtHomeAddress = new GridBagConstraints();
		gbc_txtHomeAddress.insets = new Insets(0, 0, 5, 5);
		gbc_txtHomeAddress.fill = GridBagConstraints.BOTH;
		gbc_txtHomeAddress.gridx = 1;
		gbc_txtHomeAddress.gridy = 6;
		frmReport.getContentPane().add(txtHomeAddress, gbc_txtHomeAddress);
		
		JLabel lblTelNumber = new JLabel("Owner Tel. Number:");
		lblTelNumber.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblTelNumber = new GridBagConstraints();
		gbc_lblTelNumber.anchor = GridBagConstraints.EAST;
		gbc_lblTelNumber.insets = new Insets(0, 0, 5, 5);
		gbc_lblTelNumber.gridx = 0;
		gbc_lblTelNumber.gridy = 7;
		frmReport.getContentPane().add(lblTelNumber, gbc_lblTelNumber);
		
		JTextArea txtOwnersTel = new JTextArea();
		txtOwnersTel.setText(OwnersTel);
		txtOwnersTel.setEditable(false);
		GridBagConstraints gbc_txtOwnersTel = new GridBagConstraints();
		gbc_txtOwnersTel.insets = new Insets(0, 0, 5, 5);
		gbc_txtOwnersTel.fill = GridBagConstraints.BOTH;
		gbc_txtOwnersTel.gridx = 1;
		gbc_txtOwnersTel.gridy = 7;
		frmReport.getContentPane().add(txtOwnersTel, gbc_txtOwnersTel);
		
		JLabel lblVetName = new JLabel("Vet Name:");
		lblVetName.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblVetName = new GridBagConstraints();
		gbc_lblVetName.anchor = GridBagConstraints.EAST;
		gbc_lblVetName.insets = new Insets(0, 0, 5, 5);
		gbc_lblVetName.gridx = 0;
		gbc_lblVetName.gridy = 8;
		frmReport.getContentPane().add(lblVetName, gbc_lblVetName);
		
		JTextArea txtVetName = new JTextArea();
		txtVetName.setText(VetName);
		txtVetName.setEditable(false);
		GridBagConstraints gbc_txtVetName = new GridBagConstraints();
		gbc_txtVetName.insets = new Insets(0, 0, 5, 5);
		gbc_txtVetName.fill = GridBagConstraints.BOTH;
		gbc_txtVetName.gridx = 1;
		gbc_txtVetName.gridy = 8;
		frmReport.getContentPane().add(txtVetName, gbc_txtVetName);
		
		JLabel lblVetTelNumber = new JLabel("Vet Tel. Number");
		lblVetTelNumber.setHorizontalAlignment(SwingConstants.RIGHT);
		GridBagConstraints gbc_lblVetTelNumber = new GridBagConstraints();
		gbc_lblVetTelNumber.anchor = GridBagConstraints.EAST;
		gbc_lblVetTelNumber.insets = new Insets(0, 0, 5, 5);
		gbc_lblVetTelNumber.gridx = 0;
		gbc_lblVetTelNumber.gridy = 9;
		frmReport.getContentPane().add(lblVetTelNumber, gbc_lblVetTelNumber);
		
		JTextArea txtVetTel = new JTextArea();
		txtVetTel.setText("N/A");
		txtVetTel.setEditable(false);
		GridBagConstraints gbc_txtVetTel = new GridBagConstraints();
		gbc_txtVetTel.insets = new Insets(0, 0, 5, 5);
		gbc_txtVetTel.fill = GridBagConstraints.BOTH;
		gbc_txtVetTel.gridx = 1;
		gbc_txtVetTel.gridy = 9;
		frmReport.getContentPane().add(txtVetTel, gbc_txtVetTel);
	}
}
